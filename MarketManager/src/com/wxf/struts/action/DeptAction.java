/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.wxf.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.sun.org.apache.xerces.internal.parsers.IntegratedParserConfiguration;
import com.wxf.domain.Dept;
import com.wxf.factory.ServiceFactory;
import com.wxf.service.DeptService;
import com.wxf.struts.form.DeptForm;

/** 
 * MyEclipse Struts
 * Creation date: 07-11-2016
 * 
 * XDoclet definition:
 * @struts.action parameter="flag" validate="true"
 */
public class DeptAction extends DispatchAction {
	
	private DeptService deptService;
	public DeptAction() {
		deptService=(DeptService) ServiceFactory.getInstance(null).getService("deptService");
	}
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
/*	以普通的获取全部部门的方式来展现
 * 	public ActionForward DeptList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		List<Dept> list=deptService.getAllDept();
		request.setAttribute("deptList", list);
		return mapping.findForward("deptlist");
	}
*/	
	
	//通过分页来显示全部的部门
	public ActionForward DeptList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int pageNow=1;
		String s_pageNow=request.getParameter("pageNow");
		if(s_pageNow!=null){
			pageNow=Integer.parseInt(s_pageNow);
		}
		List<Dept> list=deptService.getAllDeptWithPage(pageNow, 5);
		Integer counts=deptService.getPageCounts(5);
		request.setAttribute("deptList", list);
		request.setAttribute("counts", counts);
		return mapping.findForward("deptlist");
	}
	
	public ActionForward ToAddFrame(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("toAdd");
	}
	
	
	
	
	public ActionForward DeptAdd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		DeptForm deptForm=(DeptForm) form;
		String deptName=deptForm.getDeptName();
		String desc=deptForm.getDescription();
		Dept dept=new Dept();
		dept.setDeptName(deptName);
		dept.setDescription(desc);
		try {
			deptService.addDept(dept);
			request.setAttribute("msg", "部门添加成功，请继续添加");
			return mapping.findForward("toAdd");			
		} catch (Exception e) {
			// TODO: handle exception
			return mapping.findForward("opererror");
		}
	}
	
	
	public ActionForward ToUpdateFrame(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String s_id=request.getParameter("id");
		Integer id=0;
		if(s_id!=null){
			id=Integer.parseInt(s_id);
		}
		Dept dept=deptService.getById(id);
		request.getSession().setAttribute("dept_id", id);
		request.setAttribute("dept", dept);
		return mapping.findForward("toUpdate");
	}
	
	
	public ActionForward DeptUpdate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		DeptForm deptForm=(DeptForm) form;
		String deptName=deptForm.getDeptName();
		String description=deptForm.getDescription();
		Dept dept=new Dept();
		Integer dept_id=(Integer) request.getSession().getAttribute("dept_id");
		dept.setId(dept_id);
		dept.setDeptName(deptName);
		dept.setDescription(description);
		try {
			deptService.updateDept(dept);
			return mapping.findForward("operok");
		} catch (Exception e) {
			// TODO: handle exception
			return mapping.findForward("opererror");
		}
		
	}
	
	
	public ActionForward DeptDelete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String dept_id=request.getParameter("id");
		Integer id=0;
		if(dept_id!=null && !dept_id.equals("")){
			id=Integer.parseInt(dept_id);
		}
		try {
			deptService.deleteById(id);
			return  mapping.findForward("operok");
		} catch (Exception e) {
			// TODO: handle exception
			return mapping.findForward("opererror");
		}
	}
	
	
}