/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.wxf.struts.action;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.wxf.domain.Question;
import com.wxf.domain.Student;
import com.wxf.domain.Teacher;
import com.wxf.service.QuestionService;
import com.wxf.service.StudentService;
import com.wxf.service.TeacherService;
import com.wxf.struts.form.LoginForm;
import com.wxf.struts.form.QuestionDetail;

/** 
 * MyEclipse Struts
 * Creation date: 07-16-2016
 * 
 * XDoclet definition:
 * @struts.action path="/login" name="loginForm" parameter="flag" scope="request"
 */
public class LoginAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	@Resource
	private TeacherService teacherService;
	@Resource
	private StudentService studentService;
	@Resource
	private  QuestionService questionService;
	

	public TeacherService getTeacherService() {
		return teacherService;
	}

	public void setTeacherService(TeacherService teacherService) {
		this.teacherService = teacherService;
		System.out.println("init teacherService");
	}

	public StudentService getStudentService() {
		return studentService;
	}

	public void setStudentService(StudentService studentService) {
		this.studentService = studentService;
	}
	
	public ActionForward login(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LoginForm loginForm = (LoginForm) form;// TODO Auto-generated method stub
		String username=loginForm.getUsername();
		String password=loginForm.getPassword();
		String part=loginForm.getPart();
		if(part.equals("1")){
			Teacher teacher=teacherService.validLogin(username, password);
			if(teacher!=null){
				request.getSession().setAttribute("teacher", teacher);
				return mapping.findForward("success");
			}else {
				request.setAttribute("loginFailMsg", "登录失败，请检查你的身份和用户名密码是否正确");
				return mapping.findForward("fail");
			}
		}else {
			Student student=studentService.validStudent(username, password);
			if(student!=null){
				request.getSession().setAttribute("student", student);
				List<Question> list=questionService.findAll();
				List<QuestionDetail> list2=new ArrayList<QuestionDetail>();
				for(Question question :list){
					String selectOption=question.getSelectOption();
					String[] options=selectOption.split(";");
					//System.out.println(options.length);
					QuestionDetail  questionDetail=new QuestionDetail();
					questionDetail.setQuNo(question.getId().toString());
					questionDetail.setQutitle(question.getQutitle());
					questionDetail.setOptionA(options[0]);
					questionDetail.setOptionB(options[1]);
					questionDetail.setOptionC(options[2]);
					questionDetail.setOptionD(options[3]);
					questionDetail.setAnswer(question.getQuAnswer());
					questionDetail.setScore(question.getQuscore());
					questionDetail.setHard(question.getQuhard());
					list2.add(questionDetail);
				}
				request.setAttribute("questionList", list2);
				return mapping.findForward("exam");
			}else {
				request.setAttribute("loginFailMsg", "登录失败，请核对你的身份和用户名密码是否正确");
				return mapping.findForward("fail");
			}
		}
	}
	
	
	public ActionForward exitLogin(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		request.getSession().invalidate();
		return mapping.findForward("fail");
	}
	
	public ActionForward toMainFrame(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		request.getSession().invalidate();
		return mapping.findForward("success");
	}
	
	
}