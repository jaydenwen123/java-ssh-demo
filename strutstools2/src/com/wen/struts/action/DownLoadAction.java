/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.wen.struts.action;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.sun.org.apache.bcel.internal.generic.IADD;
import com.wsf.domain.Users;
import com.wsf.service.UserService;

/** 
 * MyEclipse Struts
 * Creation date: 07-01-2016
 * 
 * XDoclet definition:
 * @struts.action
 */
public class DownLoadAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String username = request.getParameter("username");
		UserService userService=new UserService();
		Users user=userService.getUsersByName(username);
		String oldFileName;
		try {
			//对旧的文件中文名字进行编码
			oldFileName = java.net.URLEncoder.encode(user.getOldfilename(), "utf-8");
			//文件下载
			//告诉浏览器要下载文件，并且以旧的文件名字来显示
			response.setContentType("text/html;charset=utf-8");
			response.setHeader("Content-Disposition","attachment;filename="+oldFileName);
		} catch (UnsupportedEncodingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		String newFileName=user.getNewfilename();
		String newFilePathString=this.getServlet().getServletContext().getRealPath("files");
		InputStream is=null;
		OutputStream os=null;
		try {
			is=new FileInputStream(newFilePathString+"\\"+newFileName);
			os=response.getOutputStream();
			byte[] buffer=new byte[1024];
			int len=0;
			while((len=is.read(buffer))!=-1){
				os.write(buffer, 0, len);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally{
			try {
				os.close();
				is.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return mapping.findForward("toBack");
	}
}